/*
Graphviz - DOT language writing!
dot -Tjpg flow.dot -o flow.jpg
*/

digraph Diagram {
    PROFILE [label = "c-icap-xss", shape=none];
    nodesep=0.1;
    //デフォルトノード
    node [fontsize=10];
    //デフォルトエッジ
    edge [fontsize=9];

    SERVICE_INIT [shape=doublecircle, label="SERVICE_INIT"];
    SERVICE_INIT -> init_service [label="SERVICE INITIALIZATION"];

    ICAP_REQUEST_COME [shape=doublecircle];
    ICAP_REQUEST_COME -> init_request_data [label="ICAP Request has come, creating instance"];
    subgraph clusterRunFlow {
        init_request_data -> check_preview_handler [label="Analyzing PreviewData"];
        check_preview_handler -> service_io [label="Finished Analyzing PreviewData"];
        check_preview_handler -> release_request_data [label="Ends up parse Data"];
        service_io -> service_io [label="Parse Data"];
        service_io -> release_request_data [label="Ends up parse Data"];
        service_io -> end_of_data [label="No Data left"];
        end_of_data -> release_request_data [label="destroying instance"];
        release_request_data -> init_request_data [label="Ends up parsing ICAP request"];
    }

    SIGTERM [shape=doublecircle, label="TEMRINATE"];

    subgraph HaltFlow {
        SIGTERM -> close_service [label="closing service"];
    }
    { rank=same; SERVICE_INIT ICAP_REQUEST_COME SIGTERM }
}
